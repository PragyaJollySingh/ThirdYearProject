/**
 * @author johanwesteinde
 * Test class for testing BucketZombie's methods (other than setters and getters)
 */

package tests;

import junit.framework.TestCase;

import model.*;

public class BucketZombieTest extends TestCase {

	private Player player;
	private Board board;
	private BucketZombie zombie;
	private Spot spot;
	
	
	protected void setUp() {
		player = new Player(200);
		board = new Board(player);
		spot = new Spot(9, 9, 0, false);
		zombie = new BucketZombie(100, spot, board);
	}
	
	protected void tearDown() {
		player = null;
		board = null;
		spot = null;
		zombie = null;
	}
	
	/*
	 * Test moving the zombie one spot when no other zombies on the board
	 */
	public void testMoveZombieWithNoPlants() {
		zombie.moveZombie();
		Zombie z = (Zombie) zombie;
		assertEquals(8, z.getCurrentSpot().getSpotId());
	}
	
	
	/**
	public void testMoveZombieWithPotatoInNextSpot() {
		int startSpotId = zombie.getCurrentSpot().getSpotId();

		//move the zombie and make sure its current spot gets updated correctly
		zombie.moveZombie();
		assertEquals(zombie.getCurrentSpot().getSpotId(), startSpotId - 1);
		
		zombie.moveZombie();
		assertEquals(zombie.getCurrentSpot().getSpotId(), startSpotId - 2);
		
		//set zombie spot back to xcord = 9
		Spot startSpot = new Spot(startSpotId, Board.xSize - 1, zombie.getCurrentSpot().getyCord(), false);
		zombie.setCurrentSpot(startSpot);
	}
	
	public void testMoveZombieWithDamage() {
		int spotId = zombie.getCurrentSpot().getSpotId();
		int yspot = zombie.getCurrentSpot().getyCord();
		
		//plant a peashooter in the same row as the zombie
		Spot psSpot = new Spot(yspot*board.getxSize(), 0, yspot, false);
		PeaShooter ps = new PeaShooter(0, yspot, 50, psSpot, board, wave);
		
		//move zombie and attack with peashooter (zombie doesn't die)
		zombie.moveZombie();
		assertEquals(zombie.getCurrentSpot().getSpotId(), spotId - 1);
		ps.attackZombie();
		assertEquals(50, zombie.getHealth());
		
		//move zombie and attack with peashooter (zombie dies)
		zombie.moveZombie();
		assertEquals(zombie.getCurrentSpot().getSpotId(), spotId - 2);
		ps.attackZombie();
		assertEquals(0, zombie.getHealth());
		assertFalse(zombie.isAlive());
	}
	
	**/
}
